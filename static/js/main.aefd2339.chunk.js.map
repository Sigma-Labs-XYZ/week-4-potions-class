{"version":3,"sources":["data.js","Student.js","Register.js","StudentForm.js","Search.js","App.js","reportWebVitals.js","index.js"],"names":["hogwartsStudentRegistry","name","house","time","Date","toUTCString","isLate","Student","props","handleCheckboxChange","e","updateLateRecord","parseInt","target","id","checked","toLowerCase","this","student","className","src","getHouseImgURL","alt","onChange","type","React","Component","Register","createRegister","selectedStudent","length","students","map","i","personId","hasSearched","updatedStudents","updateStudents","state","records","RegisterHeader","houses","StudentForm","handleSubmit","preventDefault","newStudents","pickRandomHouse","handleInputChange","setState","value","Math","ceil","random","onSubmit","htmlFor","defaultValue","opt","Search","updateStudentRecord","updateMatches","currentSearchText","a","filteredStudents","filter","includes","displayStudent","currentMatches","findStudent","studentIndex","foundStudent","createAutocompleteSuggestions","match","onClick","App","componentDidMount","mapStudents","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAAaA,G,KAA0B,CACnC,CAACC,KAAM,eAAgBC,MAAO,aAAcC,MAAM,IAAIC,MAAOC,cAAeC,QAAQ,GACpF,CAACL,KAAM,cAAeC,MAAO,aAAcC,MAAM,IAAIC,MAAOC,cAAeC,QAAQ,GACnF,CAACL,KAAM,mBAAoBC,MAAO,aAAcC,MAAM,IAAIC,MAAOC,cAAeC,QAAQ,GACxF,CAACL,KAAM,eAAgBC,MAAO,YAAaC,MAAM,IAAIC,MAAOC,cAAeC,QAAQ,GACnF,CAACL,KAAM,kBAAmBC,MAAO,YAAaC,MAAM,IAAIC,MAAOC,cAAeC,QAAQ,GACtF,CAACL,KAAM,YAAaC,MAAO,YAAaC,MAAM,IAAIC,MAAOC,cAAeC,QAAQ,K,cCoCrEC,E,kDArCX,WAAYC,GAAQ,IAAD,8BACf,gBAOJC,qBAAuB,SAACC,GACtB,EAAKF,MAAMG,iBAAiBC,SAASF,EAAEG,OAAOC,IAAKJ,EAAEG,OAAOE,UAT3C,E,kDAInB,SAAeb,GACX,MAAM,mBAAN,OAA0BA,EAAMc,cAAhC,U,oBAON,WAAU,IAAD,EACmCC,KAAKT,MAAMU,QAA5CjB,EADF,EACEA,KAAMC,EADR,EACQA,MAAOI,EADf,EACeA,OAAQH,EADvB,EACuBA,KAAMW,EAD7B,EAC6BA,GACpC,OACA,qBAAKK,UAAU,iBAAf,SACI,sBAAKA,UAAWb,EAAS,uBAAyB,eAAlD,UACI,qBAAKa,UAAU,4BAAf,SACI,qBAAKA,UAAU,eAAeC,IAAKH,KAAKI,eAAenB,GAAQoB,IAAG,UAAKpB,EAAL,aAEtE,sBAAKiB,UAAU,qBAAf,UACI,oBAAIA,UAAU,eAAd,SAA8BlB,IADlC,oBAEqB,uBAAME,KAE3B,qBAAKgB,UAAU,eAAf,SACI,wBAAOA,UAAU,yBAAjB,0BACI,uBAAOL,GAAIA,EAAIK,UAAU,wBAAwBI,SAAUN,KAAKR,qBAAsBM,QAAST,EAAQkB,KAAK,aAC5G,sBAAML,UAAU,4B,GA5BdM,IAAMC,WCAtBC,E,kDACJ,WAAYnB,GAAQ,IAAD,8BACjB,gBAMFoB,eAAiB,WAEf,OAD0B,EAAKpB,MAAMqB,gBAAgBC,OAAS,EAAI,EAAKtB,MAAMqB,gBAAkB,EAAKrB,MAAMuB,UACjFC,KAAI,SAACd,EAAQe,GAAT,OAAe,cAAC,EAAD,CAAiBf,QAASA,EAASP,iBAAkB,EAAKA,kBAA5CsB,OATzC,EAYnBtB,iBAAmB,SAACuB,EAAU5B,GAC1B,IAAM6B,EAAoD,IAAtC,EAAK3B,MAAMqB,gBAAgBC,OACzCM,EAAkBD,EAAW,YAAO,EAAK3B,MAAMqB,iBAAlB,YAAyC,EAAKrB,MAAMuB,UAEvFK,EADcD,EAAc,EAAID,GACT5B,OAASA,EAEhC,EAAKE,MAAM6B,eAAeD,IAhB5B,EAAKE,MAAQ,CACTC,QAAS,IAHI,E,0CAqBnB,WACE,OACC,sBAAKzB,GAAG,WAAR,UACG,cAAC,EAAD,IACA,qBAAKK,UAAU,iBAAf,SACCF,KAAKW,0B,GA3BSH,IAAMC,WAkCvBc,E,4JACF,WACA,OACI,sBAAK1B,GAAG,4BAAR,UACI,sBAAMA,GAAG,kBAAT,oBACA,oBAAIK,UAAU,kBAAd,6B,GALiBM,IAAMC,WAUpBC,IC9CTc,EAAU,CAAC,aAAc,YAAa,aAAc,YAAa,YAgDxDC,E,kDA7Cb,WAAYlC,GAAQ,IAAD,8BACjB,gBAWFmC,aAAe,SAACjC,GACdA,EAAEkC,iBADkB,MAEE,EAAKN,MAApBrC,EAFa,EAEbA,KAAMC,EAFO,EAEPA,MAEP2C,EAAW,CAAI,CAAC5C,OAAMC,MADG,aAAVA,EAAuB,EAAK4C,kBAAoB5C,EACpBC,MAAM,IAAIC,MAAOC,cAAeC,QAAO,IAAvE,mBAAkF,EAAKE,MAAMuB,WAC9G,EAAKvB,MAAM6B,eAAeQ,IAjBT,EAoBnBE,kBAAoB,SAACrC,GACnB,EAAKsC,SAAL,eAAgBtC,EAAEG,OAAOC,GAAKJ,EAAEG,OAAOoC,SAnBvC,EAAKX,MAAQ,CACTpC,MAAO,aACPD,KAAM,IAJO,E,mDAQnB,WACI,OAAOwC,EAAOS,KAAKC,KAAqB,EAAhBD,KAAKE,UAAgB,K,oBAejD,WACE,OACC,qBAAKjC,UAAU,eAAf,SACE,qBAAKA,UAAU,eAAf,SACA,uBAAML,GAAG,kBAAkBuC,SAAUpC,KAAK0B,aAA1C,UACE,uBAAOxB,UAAU,YAAYmC,QAAQ,OAArC,kBACA,uBAAOnC,UAAU,uBAAuBI,SAAUN,KAAK8B,kBAAmBjC,GAAG,OAAOU,KAAK,SACzF,uBAAQL,UAAU,YAAYmC,QAAQ,QAAtC,mBACA,wBAAQnC,UAAU,uBAAuBI,SAAUN,KAAK8B,kBAAmBjC,GAAG,QAAQyC,aAAa,aAAnG,SAEGd,EAAOT,KAAI,SAACwB,EAAKvB,GAAN,OAAY,wBAA2BgB,MAAOO,EAAK1C,GAAE,iBAAYmB,GAArD,SAA2DuB,GAA3D,UAAgBA,EAAhB,YAAuBvB,SAGjD,uBAAOd,UAAU,uBAAuBK,KAAK,SAASyB,MAAM,4B,GAtC3CxB,IAAMC,W,wBCmDjB+B,E,kDAlDb,WAAYjD,GAAQ,IAAD,8BACjB,gBAOFkD,oBAAsB,SAAC3B,GACrB,EAAKiB,SAAS,CAACjB,cATE,EAYnB4B,cAZmB,uCAYH,WAAOC,GAAP,iBAAAC,EAAA,sDACL9B,EAAY,EAAKvB,MAAjBuB,SACH+B,EAAmB/B,EAASgC,QAAO,SAAA7C,GAAO,OAAIA,EAAQjB,KAAKe,cAAcgD,SAASJ,EAAkB5C,kBAC/E,KAAtB4C,IACC,EAAKpD,MAAMyD,eAAe,IAC1BH,EAAmB,IAEvB,EAAKd,SAAS,CAACkB,eAAgBJ,IAPnB,2CAZG,wDAsBnBK,YAAc,SAACzD,GACb,IAAM0D,EAAexD,SAASF,EAAEG,OAAOC,IACjCuD,EAAe,EAAK/B,MAAM4B,eAAeE,GAC/C,EAAK5D,MAAMyD,eAAe,CAACI,KAzBV,EA4BnBC,8BAAgC,WAC5B,OAAO,EAAKhC,MAAM4B,eAAelC,KAAI,SAACuC,EAAMtC,GACxC,OAAQ,qBAAanB,GAAImB,EAAGd,UAAU,0BAA0BqD,QAAS,EAAKL,YAAtE,SACHI,EAAMtE,MADOgC,OA5BxB,EAAKK,MAAQ,CACXsB,kBAAmB,GACnBM,eAAgB,IAJD,E,0CAoCnB,WAAU,IAAD,OACEA,EAAkBjD,KAAKqB,MAAvB4B,eACT,OACA,sBAAK/C,UAAU,iBAAf,UACE,uBAAOmC,QAAQ,SAASnC,UAAU,4BAA4BL,GAAG,gBAAjE,4BACA,uBAAOK,UAAU,aAAaL,GAAG,SAASU,KAAK,OAAOD,SAAQ,uCAAE,WAAOb,GAAP,SAAAmD,EAAA,sEAAmB,EAAKF,cAAcjD,EAAEG,OAAOoC,OAA/C,mFAAF,wDAC9D,qBAAKnC,GAAG,uBAAR,SACGoD,EAAiBjD,KAAKqD,gCAAkC,Y,GA5C5C7C,IAAMC,WC+CZ+C,E,kDA1Cb,WAAYjE,GAAQ,IAAD,8BACjB,gBAOFkE,kBAAoB,WAClB,EAAKhB,oBAAoB1D,IATR,EAYnB0D,oBAAsB,SAAC3B,GACrB,IAAM4C,EAAc5C,EAASC,KAAI,SAACd,EAASe,GAAV,mBAAC,eAC7Bf,GAD4B,IACnBJ,GAAImB,OAElB,EAAKe,SAAS,CAACjB,SAAU4C,KAhBR,EAmBnB5B,kBAAoB,SAACrC,GACnB,EAAKsC,SAAL,eAAgBtC,EAAEG,OAAOC,GAAKJ,EAAEG,OAAOoC,SApBtB,EAuBnBgB,eAAiB,SAAC/C,GAChB,EAAK8B,SAAS,CAACnB,gBAAiBX,KAtBhC,EAAKoB,MAAQ,CACXP,SAAU,GACVF,gBAAiB,IAJF,E,0CA2BnB,WAAU,IAAD,EAC6BZ,KAAKqB,MAAlCP,EADA,EACAA,SAAUF,EADV,EACUA,gBACjB,OACA,sBAAKV,UAAU,cAAf,UACE,sBAAKL,GAAG,WAAR,UACE,cAAC,EAAD,CAAQiB,SAAUA,EAAUkC,eAAgBhD,KAAKgD,iBACjD,cAAC,EAAD,CAAa5B,eAAgBpB,KAAKyC,oBAAqB3B,SAAUA,OAGnE,cAAC,EAAD,CAAUA,SAAUA,EAAUF,gBAAiBA,EAAiBQ,eAAgBpB,KAAKyC,6B,GArCzEjC,IAAMC,WCITkD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,wBAAQzE,GAAG,QAAX,2BACA,cAAC,EAAD,OAEF0E,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.aefd2339.chunk.js","sourcesContent":["export const hogwartsStudentRegistry = [\n    {name: 'Harry Potter', house: 'Gryffindor', time: new Date().toUTCString(), isLate: false},\n    {name: 'Ron Weasley', house: 'Gryffindor', time: new Date().toUTCString(), isLate: true},\n    {name: 'Hermione Granger', house: 'Gryffindor', time: new Date().toUTCString(), isLate: false},\n    {name: 'Draco Malfoy', house: 'Slytherin', time: new Date().toUTCString(), isLate: false},\n    {name: 'Pansy Parkinson', house: 'Slytherin', time: new Date().toUTCString(), isLate: false},\n    {name: 'Cho Chang', house: 'Ravenclaw', time: new Date().toUTCString(), isLate: false},\n]","\nimport './App.css';\nimport React from 'react';\n\nclass Student extends React.Component {\n    constructor(props) {\n        super()\n    }\n\n    getHouseImgURL(house) {\n        return `../hogwarts-img/${house.toLowerCase()}.png`\n    }\n\n    handleCheckboxChange = (e) => {\n      this.props.updateLateRecord(parseInt(e.target.id), e.target.checked);\n    }\n\n  render() { \n      const {name, house, isLate, time, id} = this.props.student;\n    return (\n    <div className=\"student-record\">   \n        <div className={isLate ? \"student-info-is-late\" : \"student-info\"}>\n            <div className=\"house-badge-img-container\">\n                <img className=\"house-badges\" src={this.getHouseImgURL(house)} alt={`${house} logo`}/>\n            </div>\n            <div className=\"student-class-info\">\n                <h3 className=\"student-name\">{name}</h3> \n                Entered class at <br/>{time}\n            </div>\n            <div className=\"late-checker\">\n                <label className=\"late-checker-container\"> Mark as late\n                    <input id={id} className=\"late-checker-checkbox\" onChange={this.handleCheckboxChange} checked={isLate} type=\"checkbox\"/>\n                    <span className=\"checkmark\"></span>\n                </label>\n                \n            </div>\n        </div>\n    </div>\n  );\n  }\n}\n\nexport default Student;\n","import './App.css';\nimport React from 'react';\nimport Student from './Student';\n\nclass Register extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n        records: [],\n    }\n  }\n\n  createRegister = () => {\n    const studentsToDisplay = this.props.selectedStudent.length > 0 ? this.props.selectedStudent : this.props.students;\n    return studentsToDisplay.map((student,i) => <Student key={i} student={student} updateLateRecord={this.updateLateRecord}/>);\n  }\n\n  updateLateRecord = (personId, isLate) => {\n      const hasSearched = this.props.selectedStudent.length === 0;\n      const updatedStudents = hasSearched ? [...this.props.selectedStudent] : [...this.props.students] ;\n      const index = hasSearched ? 0 : personId;\n      updatedStudents[index].isLate = isLate;\n\n      this.props.updateStudents(updatedStudents);\n  }\n\n  render() { \n    return (\n     <div id=\"register\">\n        <RegisterHeader/>\n        <div className=\"register-table\">\n        {this.createRegister()}\n        </div>\n     </div>\n  );\n  }\n}\n\nclass RegisterHeader extends React.Component {      \n    render() {\n    return (\n        <div id=\"register-component-header\">\n            <span id=\"star-background\">âœ·</span>\n            <h2 className=\"component-title\">Register</h2>\n        </div>\n    )}\n}\n\nexport default Register;\n","import './App.css';\nimport React from 'react';\nconst houses =  ['Gryffindor', 'Slytherin', 'Hufflepuff', 'Ravenclaw', 'Sort Me!'];\n\nclass StudentForm extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n        house: 'Gryffindor',\n        name: '',\n    }\n  }\n\n  pickRandomHouse() {\n      return houses[Math.ceil(Math.random() * 4) - 1];\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const {name, house} = this.state;\n    const currentHouse = house === 'Sort Me!' ? this.pickRandomHouse() : house;\n    const newStudents = [{name, house: currentHouse, time: new Date().toUTCString(), isLate:false}, ...this.props.students]\n    this.props.updateStudents(newStudents);\n  }\n\n  handleInputChange = (e) => {\n    this.setState({[e.target.id]: e.target.value})\n  }\n\n  render() { \n    return (\n     <div className=\"add-students\">\n       <div className=\"form-wrapper\">\n       <form id=\"attendance-form\" onSubmit={this.handleSubmit}>\n         <label className='form-item' htmlFor='name'>Name</label>\n         <input className='form-item form-field' onChange={this.handleInputChange} id=\"name\" type=\"text\"></input>\n         <label  className='form-item' htmlFor='house'>House</label>\n         <select className='form-item form-field' onChange={this.handleInputChange} id=\"house\" defaultValue=\"Gryffindor\">\n            { \n            houses.map((opt, i) => <option key={`${opt}-${i}`}value={opt} id={`option-${i}`}>{opt}</option>)\n            }\n         </select>\n         <input className=\"form-item submit-btn\" type=\"submit\" value=\"Register me!\"></input>\n       </form>\n       </div>\n     </div>\n  );\n  }\n}\n\nexport default StudentForm;\n","\nimport './App.css';\nimport React from 'react';\n\nclass Search extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      currentSearchText: '',\n      currentMatches: [],\n    }\n  }\n\n  updateStudentRecord = (students) => {\n    this.setState({students});\n  }\n\n  updateMatches = async (currentSearchText) => {\n      const {students} = this.props;\n      let filteredStudents = students.filter(student => student.name.toLowerCase().includes(currentSearchText.toLowerCase()));\n      if(currentSearchText === '') {\n          this.props.displayStudent([]);\n          filteredStudents = [];\n      }\n      this.setState({currentMatches: filteredStudents})\n  }\n\n  findStudent = (e) => {\n    const studentIndex = parseInt(e.target.id);\n    const foundStudent = this.state.currentMatches[studentIndex];\n    this.props.displayStudent([foundStudent])\n  }\n\n  createAutocompleteSuggestions = () => {\n      return this.state.currentMatches.map((match,i) => {\n          return (<div key={i} id={i} className=\"autocomplete-suggestion\" onClick={this.findStudent}>\n              {match.name}\n          </div>)\n      })\n  }\n\n  render() { \n      const {currentMatches} = this.state;\n    return (\n    <div className=\"search-wrapper\">\n      <label htmlFor=\"search\" className=\"form-item component-title\" id=\"search-header\">Search Student</label>\n      <input className='form-field' id='search' type=\"text\" onChange={async (e) => await this.updateMatches(e.target.value)}></input>\n      <div id=\"autocomplete-wrapper\">\n        {currentMatches ? this.createAutocompleteSuggestions() : ''}\n        </div>\n    </div>\n  );\n  }\n}\n\nexport default Search;\n","\nimport './App.css';\nimport React from 'react';\nimport { hogwartsStudentRegistry } from './data';\nimport Register from './Register';\nimport StudentForm from './StudentForm';\nimport Search from './Search';\n\nclass App extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      students: [],\n      selectedStudent: [],\n    }\n  }\n\n  componentDidMount = () => {\n    this.updateStudentRecord(hogwartsStudentRegistry);\n  }\n\n  updateStudentRecord = (students) => {\n    const mapStudents = students.map((student, i) => ({\n      ...student, id: i\n    }));\n    this.setState({students: mapStudents});\n  }\n\n  handleInputChange = (e) => {\n    this.setState({[e.target.id]: e.target.value})\n  }\n\n  displayStudent = (student) => {\n    this.setState({selectedStudent: student})\n  }\n\n  render() { \n    const {students, selectedStudent} = this.state;\n    return (\n    <div className=\"app-wrapper\">\n      <div id=\"column-1\">\n        <Search students={students} displayStudent={this.displayStudent}/>\n        <StudentForm updateStudents={this.updateStudentRecord} students={students}/>\n      </div>\n\n      <Register students={students} selectedStudent={selectedStudent} updateStudents={this.updateStudentRecord} />\n    </div>\n  );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <header id=\"title\">Potions Class</header>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}